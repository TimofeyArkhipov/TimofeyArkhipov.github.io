{"version":3,"sources":["gameHelpers.js","img/bg.jpg","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","sounds/sfx-3.mp3","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartBtn.js","sounds/GameA.mp3","hooks/useAudio.js","sounds/battle-city-sfx-6.mp3","sounds/Loose.mp3","sounds/sfx-10.mp3","components/PauseBtn.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","button","TETROMINOS","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","StyledCell","props","type","Cell","console","log","React","memo","StyledStage","height","width","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","StartBtn","callback","onClick","Player","url","Audio","audio","playing","setPlaying","play","pause","loop","addEventListener","removeEventListener","useAudio","music1","toggle","className","PauseBtn","Tetris","setPause","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","audio2","sound2","calcScore","useGameStatus","audio1","sound1","looseSound","loose","dropSound","imDropSound","localStorage","getItem","topScore","setTopScore","movePlayer","volume","drop","setItem","move","keyCode","currentTime","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b986e4d9.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  )\r\n\r\n\r\n\r\nexport const checkCollision = (player, stage, {x:moveX, y:moveY}) => {\r\n    for(let y=0; y<player.tetromino.length; y+=1){\r\n        for (let x = 0; x<player.tetromino[y].length; x+=1){\r\n\r\n            if(player.tetromino[y][x]!==0){\r\n                if(!stage[y + player.pos.y + moveY] || \r\n                    !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] || \r\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\r\n                ){\r\n                    return true;\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/bg.77a5e04e.jpg\";","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bg.jpg';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  aside {\r\n    width: 100%;\r\n    max-width: 12.5em;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const StyledMusBtn = styled.button`\r\n  \r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","export const TETROMINOS = {\r\n    0:{\r\n        shape: [[0]],\r\n        color: '0, 0, 0',\r\n    },\r\n\r\n    I: {\r\n        shape: [\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                ],\r\n        color: '80, 227, 230',\r\n    },\r\n\r\n    J: {\r\n        shape: [\r\n                [0, 'J', 0],\r\n                [0, 'J', 0],\r\n                ['J', 'J', 0],\r\n                ],\r\n        color: '36, 95, 223',\r\n    },\r\n\r\n\r\n    L: {\r\n        shape: [\r\n                [0, 'L', 0],\r\n                [0, 'L', 0],\r\n                [0, 'L', 'L'],\r\n                ],\r\n        color: '223, 173, 36',\r\n    },\r\n\r\n\r\n    O: {\r\n        shape: [\r\n                ['O', 'O'],\r\n                ['O', 'O'],\r\n                ],\r\n        color: '223, 217, 36',\r\n    },\r\n\r\n    S: {\r\n        shape: [\r\n                [0, 'S', 'S'],\r\n                ['S', 'S', 0],\r\n                [0, 0, 0]\r\n                ],\r\n        color: '48, 211, 56',\r\n    },\r\n\r\n    T: {\r\n        shape: [\r\n                [0, 0, 0],\r\n                ['T', 'T', 'T'],\r\n                [0, 'T', 0],\r\n                ],\r\n        color: '132, 61, 198',\r\n    },\r\n\r\n\r\n    Z: {\r\n        shape: [\r\n                ['Z', 'Z', 0],\r\n                [0, 'Z', 'Z'],\r\n                [0, 0, 0]\r\n                ],\r\n        color: '227, 78, 78',\r\n    },\r\n\r\n}\r\n\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino =\r\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n  };","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setRowsCleared(0);\r\n    const sweepRows = newStage => newStage.reduce((acc, row) => {\r\n      if(row.findIndex(cell => cell[0] === 0) === -1){\r\n        setRowsCleared(prev=> prev + 1);\r\n        acc.unshift(new Array(newStage[0].length).fill([0, 'clear'])); \r\n        return acc;\r\n      }\r\n      acc.push(row);\r\n      return acc;\r\n    }, []);\r\n\r\n\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n      );\r\n\r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then check if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prev => updateStage(prev));\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sfx-3.64e0d371.mp3\";","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${props => props.color}, 0.8);\r\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${props => props.color}, 0.1);\r\n  border-right-color: rgba(${props => props.color}, 1);\r\n  border-top-color: rgba(${props => props.color}, 1);\r\n  border-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from \"react\";\r\nimport { StyledCell } from \"./styles/StyledCell\";\r\nimport { TETROMINOS } from \"../tetrominos\";\r\n\r\nconst Cell = ({type}) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color}>{console.log('rerender')}</StyledCell>\r\n);\r\n\r\nexport default React.memo(Cell);","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(25vw / ${props => props.width})\r\n  );\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #002d70;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n  background: #111;\r\n`;","import React from \"react\";\r\n\r\nimport Cell from \"./Cell\";\r\nimport { StyledStage } from \"./styles/StyledStage\";\r\n\r\n\r\nconst Stage = ({stage}) => (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map(row => row.map((cell, x)=> <Cell key={x} type={cell[0]}/>))}\r\n    </StyledStage>\r\n)\r\n\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center; \r\n  margin: 0 0 1em 0;\r\n  padding: 1em;\r\n  border: 4px solid #d5247c;\r\n  min-height: 1em;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n  text-transform: uppercase;\r\n`;","import React from \"react\";\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\n\r\nconst Display = ({gameOver, text}) =>(\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\n\r\nexport default Display;","import styled from \"styled-components\";\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: none;\r\n    color: #fff;\r\n    background: #333;\r\n    font-family:  Arial;\r\n    font-size: 1rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n`","import React from \"react\";\r\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\r\n\r\n\r\nconst StartBtn = ({callback}) =>(\r\n    <StyledStartButton onClick={callback}>Start new Game</StyledStartButton>\r\n)\r\n\r\n\r\nexport default StartBtn;","export default __webpack_public_path__ + \"static/media/GameA.a4704621.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport music1 from '../../src/sounds/GameA.mp3';\r\n\r\n\r\n\r\nconst useAudio = url => {\r\n  const [audio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n      playing ? audio.play() : audio.pause();\r\n      audio.loop=true;\r\n    },\r\n    [playing]\r\n  );\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener('ended', () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener('ended', () => setPlaying(false));\r\n    };\r\n  }, []);\r\n  return [playing, toggle];\r\n};\r\n\r\nconst Player = ({ url }) => {\r\n  const [playing, toggle] = useAudio(music1);\r\n//   toggle = true;\r\n\r\n  return (\r\n    <div>\r\n      <button className='musBtn' onClick={toggle}>{playing ? \"Mute off\" : \"Mute on\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;","export default __webpack_public_path__ + \"static/media/battle-city-sfx-6.58267227.mp3\";","export default __webpack_public_path__ + \"static/media/Loose.9ef9b712.mp3\";","export default __webpack_public_path__ + \"static/media/sfx-10.596fde99.mp3\";","import React from \"react\";\r\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\r\n\r\n\r\nconst PauseBtn = ({callback}) =>(\r\n    <StyledStartButton onClick={callback}>Pause</StyledStartButton>\r\n)\r\n\r\n\r\nexport default PauseBtn;","import React, {useEffect, useState} from \"react\";\r\nimport { createStage, checkCollision } from \"../gameHelpers\";\r\nimport { StyledTetrisWrapper, StyledTetris, StyledMusBtn } from \"./styles/StyledTetris\";\r\n\r\n\r\n// import {useInteral} from '../hooks/useInteral';\r\nimport { usePlayer } from \"../hooks/usePlayer\";\r\nimport { useStage } from './../hooks/useStage';\r\nimport {useGameStatus} from '../hooks/useGameStatus';\r\n\r\nimport Stage from \"./Stage\";\r\nimport Display  from \"./Display\";\r\nimport StartBtn from \"./StartBtn\";\r\n// import playerRotate\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport Player from \"../hooks/useAudio\";\r\n\r\n// import music1 from '../../src/sounds/GameA.mp3';\r\nimport sound1 from '../../src/sounds/battle-city-sfx-6.mp3';\r\nimport sound2 from '../../src/sounds/sfx-3.mp3';\r\nimport loose from '../../src/sounds/Loose.mp3';\r\nimport imDropSound from '../../src/sounds/sfx-10.mp3';\r\nimport PauseBtn from \"./PauseBtn\";\r\n\r\nconst Tetris = () => {\r\n  const [pause, setPause] = useState(false);\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(    rowsCleared  );\r\n\r\n  // let music = new Audio(music1);\r\n  let audio1 = new Audio(sound1);\r\n  let audio2 = new Audio(sound2);\r\n  let looseSound = new Audio(loose);\r\n  let dropSound = new Audio(imDropSound);\r\n\r\n//get user score\r\n\r\n\r\n\r\n\r\n\r\n  const [topScore, setTopScore] = useState(localStorage.getItem('topScore') ? localStorage.getItem('topScore') : '');\r\n\r\n\r\n\r\n\r\n  // console.log('re-render');\r\n  \r\n    const movePlayer = dir => {\r\n      if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n        updatePlayerPos({ x: dir, y: 0 });\r\n      }\r\n    }\r\n  \r\n    const startGame = () => {\r\n      // console.log(\"test\")\r\n      // const audio = '/public/sounds/GameA.mp3';\r\n      // music.play();\r\n      // music.loop = true;\r\n      // music.volume = 0.3;\r\n      \r\n      setStage(createStage());\r\n      setDropTime(1000);\r\n      resetPlayer();\r\n      setScore(0);\r\n      setRows(0);\r\n      setLevel(0);\r\n      setGameOver(false);     \r\n    }\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n \r\n   audio1.volume = 0.2;\r\n    \r\n  \r\n    const drop = () => {\r\n      // Increase level when player has cleared 10 rows\r\n\r\n      if(score>topScore){\r\n        setTopScore(score);\r\n        localStorage.setItem('topScore', score);\r\n      }\r\n\r\n\r\n      if (rows > (level + 1) * 10) {\r\n        setLevel(prev => prev + 1);\r\n        // Also increase speed\r\n        setDropTime(1000 / (level + 1) + 200);\r\n      }\r\n  \r\n      if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n        updatePlayerPos({ x: 0, y: 1, collided: false });\r\n       \r\n      } else {\r\n        // Game over!\r\n        if (player.pos.y < 1) {\r\n          console.log('GAME OVER!!!');\r\n          setGameOver(true);\r\n          setDropTime(null);\r\n          looseSound.play();\r\n          console.log(topScore);\r\n        }\r\n\r\n        updatePlayerPos({ x: 0, y: 0, collided: true });\r\n        dropSound.volume = 0.3;\r\n        dropSound.play();\r\n        \r\n      }\r\n    };\r\n  \r\n    const keyUp = ({ keyCode }) => {\r\n      if (!gameOver) {\r\n        // Activate the interval again when user releases down arrow.\r\n        if (keyCode === 40) {\r\n          setDropTime(1000 / (level + 1) + 200);\r\n        }\r\n      }\r\n    };\r\n\r\n    const dropPlayer = () => {\r\n      console.log('interval off')\r\n      setDropTime(null);\r\n      drop();\r\n    }\r\n  \r\n    const move = ({ keyCode }) => {\r\n    \r\n      audio1.pause();\r\n      audio1.currentTime = 0;    \r\n\r\n        if (!gameOver && !pause) {\r\n          if (keyCode === 37) {\r\n            movePlayer(-1);\r\n          } else if (keyCode === 39) {\r\n            movePlayer(1);\r\n          } else if (keyCode === 40) {\r\n            dropPlayer();\r\n          } else if (keyCode === 38) {\r\n            playerRotate(stage, 1)\r\n          }\r\n          // audio1.pause();\r\n          // audio1.currentTime = 0;\r\n          // audio1.play();\r\n         \r\n        }\r\n    }\r\n\r\n    useInterval(()=>{\r\n      drop();\r\n    }, dropTime, pause);\r\n  \r\n\r\n    const resumeGame = () =>{\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    const pauseGame = () => {\r\n      setDropTime(null);\r\n    }  \r\n\r\n    const pauseBtn = () =>{\r\n      if(pause){\r\n        setPause(false);\r\n        resumeGame();\r\n      } else {\r\n        setPause(true);\r\n        pauseGame();\r\n      }\r\n      console.log(pause);\r\n    }\r\n\r\n\r\n  \r\n    // useEffect(()=>{\r\n    //   // if(pause){\r\n    //   //   pauseGame();\r\n    //   // } else {\r\n    //   //   resumeGame();\r\n    //   // }\r\n    //   console.log(pause)\r\n\r\n    // }, [pause])\r\n\r\n\r\n    return (\r\n      <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={(e) => move(e)} onKeyUp={keyUp}>\r\n        <StyledTetris>\r\n          <Stage stage={stage} />\r\n          <aside>\r\n            {gameOver ? (\r\n              <div>\r\n                <Display gameOver={gameOver} text=\"Game Over\" />\r\n                <Display text={`top score: ${topScore}`} />\r\n              </div>\r\n              \r\n            ) : (\r\n              <div>\r\n                <Display text={`Score: ${score}`} />\r\n                <Display text={`Rows: ${rows}`} />\r\n                <Display text={`Level: ${level}`} />\r\n                <Display text={`top score: ${topScore}`} />\r\n              </div>\r\n            )}\r\n            <StartBtn callback={startGame} />\r\n            <PauseBtn callback={pauseBtn} />\r\n         \r\n            <Player/>\r\n          </aside>\r\n        </StyledTetris>\r\n      </StyledTetrisWrapper>\r\n    );\r\n  };\r\n  \r\n  export default Tetris;","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, dir) => {\r\n    // Make the rows to become cols (transpose)\r\n    const rotatedTetro = matrix.map((_, index) =>\r\n      matrix.map(col => col[index]),\r\n    );\r\n    // Reverse each row to get a rotated matrix\r\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n    return rotatedTetro.reverse();\r\n  };\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer);\r\n  };\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }));\r\n  };\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    });\r\n  }, []);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport sound2 from '../../src/sounds/sfx-3.mp3';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const audio2 = new Audio(sound2);\r\n\r\n\r\n  const calcScore = useCallback(() => {\r\n    // We have score\r\n    if (rowsCleared > 0) {\r\n      audio2.play();\r\n      // This is how original Tetris score is calculated\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay, pause) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n \n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null && !pause) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n  \n\n\n}","import React from 'react'\nimport Tetris from './components/Tetris';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tetris/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}